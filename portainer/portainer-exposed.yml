###############################///One Click Stacks manual deploy instructions\\\#######################################
#                                               Command to deploy                                                     #
#        DOMAIN=portainer.yourdomain.com docker stack deploy -c /one-click-stacks/stacks/portainer.yml portainer      #
#                                               Command to deploy                                                     #
#                                  Ports need to be exposed until deploy traefik                                      #
#                                                                                                                     #
#######################################################################################################################

version: '3.8'

services:
  portainer:
    image: ${IMAGE:-portainer/portainer-ce}:${VERSION:-2.16.2-alpine}
    ## After traefik is installed erase the ports part with $ docker stack down portainer ##
    ports:
      - "8000:8000"
      - "9000:9000"
      - "9443:9443"
    ## This is the limit of what shoud be erased. ##
    command: -H tcp://tasks.agent:9001 --tlsskipverify --templates https://raw.githubusercontent.com/matheusmaiberg/awesome-stacks/409cbef960c0240c35d2e8aa960b66d0565e86c7/templates.json
    volumes:
      - ${VOLUME_PATH}portainer:/data
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.portainer-${NUMBER:-1}.rule=Host(`${DOMAIN:-portainer.localhost}`)
        - traefik.http.routers.portainer-${NUMBER:-1}.entrypoints=${SCHEME:-https}
        - traefik.http.routers.portainer-${NUMBER:-1}.service=portainer-${NUMBER:-1}
        - traefik.http.routers.portainer-${NUMBER:-1}.tls.certresolver=letsencrypt
        - traefik.http.services.portainer-${NUMBER:-1}.loadbalancer.server.port=9000
      mode: replicated
      replicas: 1
    networks:
      - internal
      - traefik

  agent:
    image: portainer/agent:${VERSION:-2.16.2-alpine}
    environment:
      - AGENT_CLUSTER_ADDR=tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
      mode: global
    networks:
      - internal

volumes:
  portainer:

networks:
  internal:
    driver: overlay
    attachable: true
  traefik:
    external: true
    name: traefik-public